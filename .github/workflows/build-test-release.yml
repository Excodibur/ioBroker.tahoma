name: Build, Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
    push:
        branches:
            - "*"
        tags:
            # normal versions
            - "v[0-9]+.[0-9]+.[0-9]+"
            # pre-releases
            - "v[0-9]+.[0-9]+.[0-9]+-**"
    pull_request: {}

jobs:
    # Performs quick checks before the expensive test runs
    check:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [14.x]

        steps:
            - uses: actions/checkout@v2.4.0
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2.5.1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install dependencies
              run: npm ci

    # ===================

    # Runs unit tests on all supported node versions and OSes
    unit-tests:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        needs: [check]

        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node-version: [12.x, 14.x, 16.x]
                os: [ubuntu-latest]

        steps:
            - uses: actions/checkout@v2.4.0
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2.5.1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install dependencies
              run: npm ci

            - name: Run component tests
              run: npm run test
              env:
                  CI: true
                  
    integration-tests:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        needs: [check]

        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node-version: [12.x, 14.x, 16.x]
                os: [ubuntu-latest, macos-latest]

        steps:
            - uses: actions/checkout@v2.4.0
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2.5.1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install dependencies
              run: npm ci
              
            - name: Run integration tests on Linux/OSX env
              run: npm run test:integration:complete
              env:
                  CI: true

    # ===================

    # Deploys the final package to NPM
    deploy:
        # Trigger this step only when a commit on master is tagged with a version number
        if: |
            contains(github.event.head_commit.message, '[skip ci]') == false &&
            github.event_name == 'push' &&
            startsWith(github.ref, 'refs/tags/v')

        needs: [unit-tests, integration-tests]

        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [10.x]

        steps:
            - uses: actions/checkout@v2.4.0
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2.5.1
              with:
                  node-version: ${{ matrix.node-version }}
            
            - name: Extract the version and commit body from the tag
              id: extract_release
              # The body may be multiline, therefore we need to escape some characters
              run: |
                  VERSION="${{ github.ref }}"
                  VERSION=${VERSION##*/v}
                  echo "::set-output name=VERSION::$VERSION"
                  BODY=$(git show -s --format=%b)
                  BODY="${BODY//'%'/'%25'}"
                  BODY="${BODY//$'\n'/'%0A'}"
                  BODY="${BODY//$'\r'/'%0D'}"
                  echo "::set-output name=BODY::$BODY"

            - name: Install dependencies
              run: npm ci

            - name: Publish package to npm
              run: |
                  npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
                  npm whoami
                  npm publish

            - name: Create Github Release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: ${{ github.ref }}
                release_name: Release v${{ steps.extract_release.outputs.VERSION }}
                draft: false
                # Prerelease versions create prereleases on Github
                prerelease: ${{ contains(steps.extract_release.outputs.VERSION, '-') }}
                body: ${{ steps.extract_release.outputs.BODY }}